name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
    build-windows:
        # The CMake configure and build commands are platform agnostic and should work equally
        # well on Windows or Mac.  You can convert this to a matrix build if you need
        # cross-platform coverage.
        # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
        runs-on: windows-latest

        steps:
        - uses: actions/checkout@v2

        - name: Build
            # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
            # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
          run: | 
                mkdir build
                cd build
                cmake ..
                cmake --build . --config Release
                cmake --install . --config Release --prefix ${{ github.workspace }}/artifact/windows
                
           
        - name: Upload
          uses: actions/upload-artifact@v2
          with: 
            name: CodeFormat windows
            path: ${{ github.workspace }}/artifact/windows/bin/*
            

    build-linux:
        # The CMake configure and build commands are platform agnostic and should work equally
        # well on Windows or Mac.  You can convert this to a matrix build if you need
        # cross-platform coverage.
        # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
        runs-on: ubuntu-latest

        steps:
        - uses: actions/checkout@v2

        - name: Build
          # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
          # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
          run: | 
            mkdir build
            cd build
            cmake ..
            cmake --build . --config Release
            cmake --install . --config Release --prefix ${{ github.workspace }}/artifact/linux
           

        - name: Upload
          uses: actions/upload-artifact@v2
          with: 
            name: CodeFormat linux
            path: ${{ github.workspace }}/artifact/linux/bin/*

     
      
    build-macosx:
        # The CMake configure and build commands are platform agnostic and should work equally
        # well on Windows or Mac.  You can convert this to a matrix build if you need
        # cross-platform coverage.
        # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
        runs-on: macos-latest

        steps:
        - uses: actions/checkout@v2

        - name: Build
            # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
            # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
          run: | 
                mkdir build
                cd build
                cmake ..
                cmake --build . --config Release
                cmake --install . --config Release --prefix ${{ github.workspace }}/artifact/dartwin
             
           
        - name: Upload
          uses: actions/upload-artifact@v2
          with: 
            name: CodeFormat macosx
            path: ${{ github.workspace }}/artifact/dartwin/bin/*
